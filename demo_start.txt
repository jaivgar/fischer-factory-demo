Repositories usef for this demo:

emanuelpalm/productive-demo-wm
arrowhead-f/core-java-spring  (version 4.2.x)
arrowhead-f/arrowhead-contract-proxy
jaivgar/workflow-manager
jaivgar/workflow-executor
jaivgar/smart-product

The first time that you try to execute all the systems, there will be issues as the database is not ready, so the buyer and sellers will fail to start.
The solution is to execute the sysop-configurator system, and it requires that the core systems are running in addition to the smart-product, workflow-manager and workflow-executor systems. You only need to execute sysop-configurator system once, then you can stop it as it does not need to keep running for the demo to work.


// Instructions if we do not use dockers and compile from source
Build contract proxy - mvn verify
build productive-demo-wm -  in root gradlew shadowJar
find gradle jars inside build/libs/

GUI localhost port 9001 and 9002 OR 9002 and 9003 (Remember to import sysop cert)

To use the Smart Product I need to copy the certificae cloud and create systems certificates from that one, plus the authorization rules

// Staff needed if we use dockers, but not doing that for this demo
cmd instructions: 
	cd contract-proxy	
	docker build . -t contract-proxy
into prodcutive-demo-we
cmd instructions: 
	./scripts/mk_certs.sh
	docker-compose up --build

// Order start systems
1.Contract proxy-buyer
1.Contract-proxy-seller
2.buyer
2.seller
